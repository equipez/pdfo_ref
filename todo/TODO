1. Check and complete the pre/post conditions, particularly the finiteness of XPT, XOPT, STEP, X,
   etc.

2. Profile the Fortran code to find which subroutine costs the most time.
   We can use gprof and gprof2dot to to this:
   https://www.thegeekstuff.com/2012/08/gprof-tutorial/
   https://github.com/jrfonseca/gprof2dot
   $ gcc -pg main.f90
   $ gprof a.out gmon.out | gprof2dot | dot -Tpng -o output.png

3. 20230108: See TODO_mat

4. What about solve the TR subproblem of COBYLA using a composite step approach? Vardi or
   Byrd-Omojokun?

5. Check the definition and update of RESCON in LINCOA, in UPDATE/UPDATERES.

6. Unify the UPDATEQ, UPDATEXF(, and UPDATEH) of BOBYQA/LINCOA/NEWUOA.

7. Implement a subroutine that evaluates the functions, updates NF, updates history/filter, and
   prints messages?

9. Test whether the scaling threshold in the trust-region subproblem solvers can be improved.

10. For NEWUOA, BOBYQA, LINCOA, implement the trust-redundant subroutine solvers using hmul.
