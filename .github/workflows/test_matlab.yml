name: Test MATLAB

on:
  # Trigger the workflow on push or pull request
  push:
  #pull_request:  # DANGEROUS! MUST be disabled for self-hosted runners!
  # Trigger the workflow by cron. The default time zone of GitHub Actions is UTC.
  schedule:
    - cron: '0 1, * * *'
  # Trigger the workflow when it is manually triggered
  workflow_dispatch:

jobs:
  test:
    name: Test MATLAB
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-2019]   # MEX Fortran does not work on windows-latest yet
        matlab: [R2020a, R2020b, R2021a, R2021b, R2022a, R2022b, latest]
        exclude:
          - os: windows-2019
            matlab: R2020a
          - os: windows-2019
            matlab: R2020b
          # - os: windows-latest
          #   matlab: R2020a
          # - os: windows-latest
          #   matlab: R2020b
          # - os: windows-latest
          #   matlab: R2021a
          # - os: windows-latest
          #   matlab: R2021b

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Link gfortran for MATLAB on Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          GFVER=12
          if [[ "${{ matrix.matlab }}" = "R2020a" || "${{ matrix.matlab }}" == "R2020b" \
             || "${{ matrix.matlab }}" = "R2021a" || "${{ matrix.matlab }}" == "R2021b" ]] ; then
              GFVER=9
          fi
          sudo bash .github/scripts/link_gfortran_for_matlab "$GFVER"

      - name: Install Intel oneAPI on macOS
        if: startsWith(matrix.os, 'macos')
        run: sudo bash .github/scripts/install_oneapi_macos.sh

      - name: Install Intel oneAPI on Windows
        if: startsWith(matrix.os, 'windows')
        shell: bash
        run: .github/scripts/install_oneapi_windows.bat
        #run: cmd.exe "/K" '".github\scripts\install_oneapi_windows.bat"'

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1.2.3
        with:
          release: ${{ matrix.matlab }}

      - name: Run script
        uses: matlab-actions/run-command@v1.1.2
        with:
          command: |
              ver;
              root_dir = pwd();
              cd(fullfile(root_dir));
              options = struct();
              options.debug=true;
              setup(options);
              testprima;
              setup
              setup path
              testprima;
              % Below R2022a = 9.12, MEX on macOS with GitHub Actions is slow.
              if ~verLessThan('matlab', '9.12')
                setup cobyla
                setup uobyqa
                setup newuoa
                setup bobyqa
                setup lincoa
                setup path
              end
              setup clean
              setup path
              setup uninstall
              setup path
              setup uninstall
              cd(fullfile(root_dir, 'matlab', 'tests')); pdv
