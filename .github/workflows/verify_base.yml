name: Verify faithfulness of the basis

on:
  # Trigger the workflow on push or pull request
  #push:
  #pull_request:  # DANGEROUS! MUST be disabled for self-hosted runners!
  # Trigger the workflow by cron. The default time zone of GitHub Actions is UTC.
  schedule:
      #  - cron: '0 1,9,17 * * *'
    - cron: '0 17 * * *'
  # Trigger the workflow when it is manually triggered
  workflow_dispatch:

env:
  GFORTRAN_VERSION: 11
  MATLAB_RELEASE: latest

jobs:
  test:
    name: Verify the faithfulness of the modernized solvers.
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        solver: [lincoa, bobyqa, uobyqa, cobyla, newuoa]
        dim: [small, big, large]
        version: [220208, 220227, 220513, 220531,220601,220616,220819,220926,221105]
        exclude:
          - solver: lincoa
            dim: large  # very few problems but takes too much time to run
          - solver: newuoa
            dim: large  # very few problems but takes too much time to run
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: cache install CUTEst
        id: cache-install-cutest
        uses: actions/cache@v3
        with:
          path: ~/local/cutesif
          key:  ${{ runner.os }}-${{ hashFiles('**/.github/scripts/install_cutest') }}
      - name: Install CUTEst
        if: steps.cache-install-cutest.outputs.cache-hit != 'true'
        run: |
          bash .github/scripts/install_cutest

      - name: Link gfortran for MATLAB on Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo bash .github/scripts/link_gfortran_for_matlab ${{ env.GFORTRAN_VERSION }}

      - name: Check MATLAB
        id: check_matlab
        run: |
            if type 'matlab' &> /dev/null ; then echo "::set-output name=has_matlab::true" ; fi

      - name: Set up MATLAB
        if: ${{ steps.check_matlab.outputs.has_matlab != 'true' }}
        uses: matlab-actions/setup-matlab@v1.2.3
        with:
          release: ${{ env.MATLAB_RELEASE }}

      - name: Run script
        uses: matlab-actions/run-command@v1.1.2
        with:
          command: |
            ver;
            cd('base/${{ matrix.version }}/matlab/tests');
            tz = 'Asia/Shanghai';
            dt = datetime('now', 'TimeZone', tz);
            DayMonth = day(dt);
            options = struct();
            options.seed = 10000*mod(year(dt), 100) + 100*week(dt) + hour(dt);
            if strcmp('${{ matrix.dim }}', 'large'), options.nr = 5; end;
            options
            if mod(DayMonth, 2) == 1
                fprintf('\n\n==========> Run the test sequentially <===========\n\n');
                verify('${{ matrix.solver }}', '${{ matrix.dim }}', 'seq', options);
            else
                fprintf('\n\n==========> Run the test in parallel <===========\n\n');
                verify('${{ matrix.solver }}', '${{ matrix.dim }}', options);
            end
            delete([upper('${{ matrix.solver }}'), '_output.txt']);
            delete('fort.6');
            cd ../../;
            setup clean; setup uninstall;
