name: Verification, big

on:
  # Trigger the workflow on push or pull request
  push:
  pull_request:  # DANGEROUS! MUST be disabled for self-hosted runners!
  # Trigger the workflow by cron. The default time zone of GitHub Actions is UTC.
  schedule:
    - cron: '0 21 * * *'
  # Trigger the workflow manually
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref (Optional)
        required: false
      random-seed:
        description: Random Seed (Optional)
        required: false

# Show the git ref in the workflow name if it is invoked manually.
run-name: ${{ github.event_name == 'workflow_dispatch' && format('Manual run {0} , seed {1}', inputs.git-ref, inputs.random-seed) || '' }}


jobs:
  test:
    name: Verify PRIMA.
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        matlab: [latest]
        solver: [newuoa, cobyla, lincoa, bobyqa, uobyqa]
        dim: [big]
    # run scheduled workflows only in central repository
    if: ${{ (github.event_name != 'schedule') || ((github.event_name == 'schedule') && (github.repository == 'libprima/prima)) }}

    steps:

      - name: Clone Repository (Latest)
        uses: actions/checkout@v4
        if: github.event.inputs.git-ref == ''
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY_ACT }} # This forces checkout to use SSH, not HTTPS
          submodules: recursive
      - name: Clone Repository (Custom Ref)
        uses: actions/checkout@v4
        if: github.event.inputs.git-ref != ''
        with:
          ref: ${{ github.event.inputs.git-ref }}
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY_ACT }} # This forces checkout to use SSH, not HTTPS
          submodules: recursive

      - name: Miscellaneous setup
        run: bash .github/scripts/misc_setup

      - name: Clone MatCUTEst
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY_ACT }} # This forces checkout to use SSH, not HTTPS
          repository: matcutest/matcutest_compiled
          path: matcutest

      - name: Link gfortran for MATLAB on Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: bash .github/scripts/link_gfortran ${{ env.GFORTRAN_VERSION }}

      - name: Check MATLAB
        id: check_matlab
        run: if type 'matlab' &> /dev/null ; then echo "::set-output name=has_matlab::true" ; fi

      - name: Cache MATLAB  # N.B.: Clear the cache when the `latest` version of MATLAB changes in March and September
        uses: actions/cache@v3.3.2
        with:
          path: ${{ runner.tool_cache }}/MATLAB
          key: ${{ matrix.os }}-${{ matrix.matlab }}

      - name: Set up MATLAB
        if: ${{ steps.check_matlab.outputs.has_matlab != 'true' }}
        uses: matlab-actions/setup-matlab@v2-beta
        with:
          release: ${{ matrix.matlab }}

      - name: Conduct the test
        uses: matlab-actions/run-command@v1.2.1
        with:
          command: |
            ver;
            root_dir = pwd();

            cd(fullfile(root_dir, 'matcutest')); install(); which macup

            cd(fullfile(root_dir, 'matlab/tests'));
            options = struct();
            options.verbose = true;
            if ~isempty('${{ inputs.random-seed }}')
                options.seed = str2num('${{ inputs.random-seed }}');
            else
                copyfile('private/year_week.m', cd());
                options.seed = year_week('Asia/Shanghai');
            end
            if strcmp('${{ matrix.solver }}', 'bobyqa') || strcmp('${{ matrix.solver }}', 'lincoa'), options.nr = 4; end;
            options
            verify('${{ matrix.solver }}', '${{ matrix.dim }}', options);
            cd(root_dir); setup path; setup clean; setup uninstall  % Test that `setup` works properly.


      - name: Store artifacts
        uses: actions/upload-artifact@v3.1.3
        if: always()  # Always run even if the workflow is canceled manually or due to overtime.
        with:
          path: |
            /tmp/${{ matrix.solver }}_verify_prima/*start*
            /tmp/${{ matrix.solver }}_verify_prima/*end*
